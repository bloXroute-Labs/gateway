// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bloXroute-Labs/gateway/v2/protobuf (interfaces: Gateway_IntentsServer)
//
// Generated by this command:
//
//	mockgen -destination ../test/mock/gw_intents_server_mock.go -package mock github.com/bloXroute-Labs/gateway/v2/protobuf Gateway_IntentsServer
//
// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gateway "github.com/bloXroute-Labs/gateway/v2/protobuf"
	gomock "go.uber.org/mock/gomock"
	metadata "google.golang.org/grpc/metadata"
)

// MockGateway_IntentsServer is a mock of Gateway_IntentsServer interface.
type MockGateway_IntentsServer struct {
	ctrl     *gomock.Controller
	recorder *MockGateway_IntentsServerMockRecorder
}

// MockGateway_IntentsServerMockRecorder is the mock recorder for MockGateway_IntentsServer.
type MockGateway_IntentsServerMockRecorder struct {
	mock *MockGateway_IntentsServer
}

// NewMockGateway_IntentsServer creates a new mock instance.
func NewMockGateway_IntentsServer(ctrl *gomock.Controller) *MockGateway_IntentsServer {
	mock := &MockGateway_IntentsServer{ctrl: ctrl}
	mock.recorder = &MockGateway_IntentsServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGateway_IntentsServer) EXPECT() *MockGateway_IntentsServerMockRecorder {
	return m.recorder
}

// Context mocks base method.
func (m *MockGateway_IntentsServer) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockGateway_IntentsServerMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockGateway_IntentsServer)(nil).Context))
}

// RecvMsg mocks base method.
func (m *MockGateway_IntentsServer) RecvMsg(arg0 any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecvMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockGateway_IntentsServerMockRecorder) RecvMsg(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockGateway_IntentsServer)(nil).RecvMsg), arg0)
}

// Send mocks base method.
func (m *MockGateway_IntentsServer) Send(arg0 *gateway.IntentsReply) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockGateway_IntentsServerMockRecorder) Send(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockGateway_IntentsServer)(nil).Send), arg0)
}

// SendHeader mocks base method.
func (m *MockGateway_IntentsServer) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockGateway_IntentsServerMockRecorder) SendHeader(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockGateway_IntentsServer)(nil).SendHeader), arg0)
}

// SendMsg mocks base method.
func (m *MockGateway_IntentsServer) SendMsg(arg0 any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockGateway_IntentsServerMockRecorder) SendMsg(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockGateway_IntentsServer)(nil).SendMsg), arg0)
}

// SetHeader mocks base method.
func (m *MockGateway_IntentsServer) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockGateway_IntentsServerMockRecorder) SetHeader(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockGateway_IntentsServer)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockGateway_IntentsServer) SetTrailer(arg0 metadata.MD) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTrailer", arg0)
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockGateway_IntentsServerMockRecorder) SetTrailer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockGateway_IntentsServer)(nil).SetTrailer), arg0)
}
